{"ast":null,"code":"var _jsxFileName = \"/workspaces/Barcode_Project_453/my-web-app/frontend/src/pages/AllergenAlert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllergenAlert = () => {\n  _s();\n  const [nutritionalFacts, setNutritionalFacts] = useState('');\n  const [allergens, setAllergens] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/allergen', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nutritionalFacts\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setAllergens(result.allergens);\n      } else {\n        console.error('Error checking allergens:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error checking allergens:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Allergen Alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: nutritionalFacts,\n        onChange: e => setNutritionalFacts(e.target.value),\n        placeholder: \"Enter nutritional facts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), allergens && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(allergens, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AllergenAlert, \"+uQfsT5FQNsB6d6/mWkeXXhbRug=\");\n_c = AllergenAlert;\nexport default AllergenAlert;\nvar _c;\n$RefreshReg$(_c, \"AllergenAlert\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AllergenAlert","_s","nutritionalFacts","setNutritionalFacts","allergens","setAllergens","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","error","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["/workspaces/Barcode_Project_453/my-web-app/frontend/src/pages/AllergenAlert.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AllergenAlert = () => {\n  const [nutritionalFacts, setNutritionalFacts] = useState('');\n  const [allergens, setAllergens] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/allergen', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ nutritionalFacts })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setAllergens(result.allergens);\n      } else {\n        console.error('Error checking allergens:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error checking allergens:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Allergen Alert</h2>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={nutritionalFacts}\n          onChange={(e) => setNutritionalFacts(e.target.value)}\n          placeholder=\"Enter nutritional facts\"\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {allergens && <pre>{JSON.stringify(allergens, null, 2)}</pre>}\n    </div>\n  );\n};\n\nexport default AllergenAlert;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb;QAAiB,CAAC;MAC3C,CAAC,CAAC;MACF,IAAIO,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACpCb,YAAY,CAACY,MAAM,CAACb,SAAS,CAAC;MAChC,CAAC,MAAM;QACLe,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEX,QAAQ,CAACY,UAAU,CAAC;MACjE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB3B,OAAA;MAAM4B,QAAQ,EAAErB,YAAa;MAAAgB,QAAA,gBAC3BvB,OAAA;QACE6B,KAAK,EAAE1B,gBAAiB;QACxB2B,QAAQ,EAAGtB,CAAC,IAAKJ,mBAAmB,CAACI,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;QACrDG,WAAW,EAAC;MAAyB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACF3B,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACNtB,SAAS,iBAAIL,OAAA;MAAAuB,QAAA,EAAMR,IAAI,CAACC,SAAS,CAACX,SAAS,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACzB,EAAA,CAvCID,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}